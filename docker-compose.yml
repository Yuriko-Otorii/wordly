version: '3.8'

services:
  backend:
    build:
      context: ./Backend
    container_name: backend
    ports:
      - '8000:8000'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: ${DB_PORT}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${DB_PORT}/${POSTGRES_DB}
    volumes:
      - ./backend:/Backend
    working_dir: /Backend
    command: >
      sh -c "$ watchmedo auto-restart --pattern "*.py" --recursive --signal SIGTERM \
        python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./Frontend
    container_name: frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/Frontend
      - /Frontend/node_modules
      - /Frontend/.next
    command: npm run dev
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 15s
      timeout: 15s
      retries: 5
volumes:
  pgdata:
